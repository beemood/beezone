// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/@beezone/sample-db"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Sample {
  id   Int    @id @default(autoincrement())
  name String @unique
}

model Category {
  id            Int           @id @default(autoincrement())
  name          String        @unique
  subCategories SubCategory[]
}

model SubCategory {
  id   Int    @id @default(autoincrement())
  name String @unique

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  products Product[]
}

model Product {
  id        Int    @id @default(autoincrement())
  productId String @unique @default(uuid())

  name         String  @unique
  desccription String  @default("No description")
  upc          String  @unique
  make         String?
  model        String?

  category   SubCategory @relation(fields: [categoryId], references: [id])
  categoryId Int

  attributes ProductAttribute[]
}

model ProductVariant {
  id Int @id @default(autoincrement())
}

model ProductAttribute {
  id Int @id @default(autoincrement())

  key   String
  value String

  product   Product @relation(fields: [productId], references: [productId], onDelete: Cascade, onUpdate: Cascade)
  productId String

  @@unique([key, productId])
}

model PriceLevel {
  id   Int    @id @default(autoincrement())
  name String @unique
}
